/* div {
  width: 200px;
  height: 200px;

  border: 1px solid black;
  background-color: lightgray;
} */

/* 전체 선택자 */
/* * {
  color: red;
} */

/* 태그 선택자 ex. li / div / span ,,, 해당 태그만 변함 */
/* span {
  color: red;
} */

/* 클래스 선택자 : 특정 클래스를 가진 요소만 선택 */
/* .orange {
  color: orange;
} */

/* id 선택자 : 특정 아이디를 가진 요소만 선택*/
/* #orange {
  color: blue;
} */

/* id 선택자 > 클래스 선택자 로 더 강하기 때문에 우선 적용 됨 */

/* 일치 선택자 */

span.orange {
  color: red;
}

/* 자식 선택자 : 부모 태그의 > 한단계 아래 자식 중 특정 요소 선택 */

ul > .orange {
  background-color: gray;
}

/* 하위 선택자 : 부모 태그의 하위 요소 싹 다 선택 (단계 상관없이) */
ul .orange {
  font-weight: bold;
}

/* 인접 형제 선택자 : +면 바로 다음 요소 선택, 바로 인접한 형제 요소만 선택 */
.orange + li {
  font-size: 30px;
}

/* 일반 형제 선택자 : 다음에 오는 모든 요소 선택 */
.orange ~ li {
  color: green;
}

/* 가상 클래스 선택자 */
/* hover : 마우스 커서 올렸을 때*/
a:hover {
  color: red;
}

/* active : 클릭 할 때 */
a:active {
  color: white;
  background-color: black;
}

/* focus */
input:focus {
  background-color: lightgrey;
}

/* :first-child :선택자가 형제 요소중 첫번째 요소라면 선택함*/
.fruits span:first-child {
  color: red;
}

.fruits div:first-child {
  color: blue;
}

/* last-child : 선택자가 형제 요소 중 막내,마지막 요소라면 선택 */

.fruits h3:last-child {
  text-decoration: line-through;
}

.fruits p:last-child {
  color: green;
}

/* nth-child(n) : 선택자가 형제 요소 중 n번째 요소라면 선택 , 0부터 시작 2n , 2n+1 */

/* 부정 선택자 not : () 안 태그를 제외한 요소 선택  */
.fruits *:not(span) {
  background-color: aqua;
}

/* 가상요소선택자 */
/* ::before : 선택자 요소의 내부 앞에 내용(content) 삽입 */
.fruits::before {
  content: " 과일 목록 시작 ";
}

/* after 은 끝부분에 내용 삽입. 자동 줄바꿈 기능 ㅇ */
.fruits::after {
  content: " 과일 목록 끝 ";
}

/* 속성 */
/* [] = 특정 선택 */
input[readonly] {
  background-color: orange;
}

input[password] {
  color: red;
}
